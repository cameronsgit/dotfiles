<# 
    This is my custom prompt for PowerShell. 
     
    It displays username@computername | current time | current date | working directory 
     
    The last character will be either $ for users NOT in administrators group 
    or # for users IN administrators group 
     
#> 
#
#Window Title change
#
$Path = "C:\Windows\System32\WindowsPowerShell\v1.0\WindowsPowerShell\PowerTabConfig.xml"
Import-Module PowerTab -ArgumentList $Path
#
#Import PSGet | Script to use if not found -> (new-object Net.WebClient).DownloadString("http://psget.net/GetPsGet.ps1") | iex
Get-PSSnapin -Name *Remote.Desktop* -Registered | % { Write-Host "$_..." -NoNewline; if ( (Get-PSSnapin -Name $_ -ErrorAction SilentlyContinue) -eq $null ) { Write-Host "installing" -ForegroundColor Yellow; Add-PsSnapin $_ } else { Write-Host "already installed" -ForegroundColor Green;  } }
Get-RDM-DataSource
Import-Module PsGet
$Global:Admin="$" 
$Global:SubversionClient="svn" 
$Global:CurrentUser = [System.Security.Principal.WindowsIdentity]::GetCurrent() 
$Global:principal = new-object System.Security.principal.windowsprincipal($Global:CurrentUser) 
if ($Host.Name -eq 'ConsoleHost') 
{ 
    # 
    # Set default editor 
    # 
    $Global:POSHEditor = 'C:\Program Files (x86)\Vim\vim74\vim.exe' 
     
 
 
    try 
    { 
        # 
        # Load up GitHub Shell Extensions 
        # 
        . (Resolve-Path "$env:LOCALAPPDATA\GitHub\shell.ps1") 
        # 
        # Have we cloned posh-git 
        # 
        if (!(Test-Path C:\Windows\System32\WindowsPowerShell\v1.0\Modules\posh-git)) 
        { 
            # 
            # Nope, well we NEED IT so clone it! 
            # 
            git clone https://github.com/dahlbyk/posh-git.git 
            } 
        else 
        { 
            # 
            # There it is! 
            # 
            Import-Module C:\Windows\System32\WindowsPowerShell\v1.0\Modules\posh-git\posh-git.psm1 
            } 
        } 
    catch 
    { 
        Write-Error "Please download GitHub for Windows at https://windows.github.com/" 
        } 
    } 
 
 
# Move me into root
Set-Location C:\
#
#Output Chocolatey version
#
choco version
# Wat u dnt use choco?? | Use copypaste for the chocolaty goodness (see next line)
# @powershell -NoProfile -ExecutionPolicy unrestricted -Command "iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))" && SET PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin
#
# Change prompt to # if i have admin rights 
# 
if ($Global:principal.IsInRole("Administrators"))  
{ 
    $Admin="#" 
    } 

Import-Module GetRDM 
# 
# Setup my custom prompt 
# 
Function prompt  
{ 
    $Now = $(get-date).Tostring("HH:mm:ss | MM-dd-yyy") 
    # 
    # I use GIT now for most everything and this allows my prompt to have nifty colors that represent 
    # the status of various files 
    # 
    $Host.UI.RawUI.ForegroundColor = $GitPromptSettings.DefaultForegroundColor 
    Write-Host "# $($env:username)@$($env:computername) | $($Now) | $(Get-Location) $Global:Admin " -NoNewLine 
    # 
    # This writes the actual status of the repo (if i'm in one) at the tail end of the cmdline 
    # 
    Write-VcsStatus 
    return "`n" 
    } 
 
 
